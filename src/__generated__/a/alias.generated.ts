// Code generated by graphql-codegen. DO NOTT EDIT.

import * as Types from "./graphqlTypes";

import { TypedDocumentNode as DocumentNode } from "@graphql-typed-document-node/core";
export type PostSummaryFragment = {
  __typename?: "Post";
  title: string;
  body: string;
  user: { __typename?: "User"; username: string; thumbnailUrl?: string | null };
};

export type GetPostSummaryQueryVariables = Types.Exact<{
  postId: Types.Scalars["String"];
}>;

export type GetPostSummaryQuery = {
  __typename?: "Query";
  postById: {
    __typename?: "Post";
    id: string;
    title: string;
    body: string;
    user: {
      __typename?: "User";
      username: string;
      thumbnailUrl?: string | null;
    };
  };
};

export const PostSummaryFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostSummary" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "body" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "user" },
            name: { kind: "Name", value: "author" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "username" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "thumbnailUrl" },
                  name: { kind: "Name", value: "avatarUrl" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostSummaryFragment, unknown>;
export const GetPostSummaryDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetPostSummary" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "postId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "postById" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "postId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "postId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostSummary" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostSummaryFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<GetPostSummaryQuery, GetPostSummaryQueryVariables>;
