/* eslint-disable */
// Code generated by graphql-codegen. DO NOTT EDIT.

import { TypedDocumentNode as DocumentNode } from "@graphql-typed-document-node/core";
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

export type AttachmentFile = Image | Video;

export type Comment = {
  __typename?: "Comment";
  author: User;
  body: Scalars["String"];
  id: Scalars["String"];
};

export type Image = {
  __typename?: "Image";
  id: Scalars["String"];
  imageUrl: Scalars["String"];
};

export type Post = {
  __typename?: "Post";
  attachmentFiles: Array<AttachmentFile>;
  author: User;
  body: Scalars["String"];
  comments: Array<Comment>;
  id: Scalars["String"];
  title: Scalars["String"];
};

export type Query = {
  __typename?: "Query";
  postById: Post;
  postsByUserId: Array<Post>;
  userById: User;
};

export type QueryPostByIdArgs = {
  postId: Scalars["String"];
};

export type QueryPostsByUserIdArgs = {
  userId: Scalars["String"];
};

export type QueryUserByIdArgs = {
  userId: Scalars["String"];
};

export type User = {
  __typename?: "User";
  avatarUrl?: Maybe<Scalars["String"]>;
  email: Scalars["String"];
  id: Scalars["String"];
  username: Scalars["String"];
};

export type Video = {
  __typename?: "Video";
  id: Scalars["String"];
  videoUrl: Scalars["String"];
};

export type PostSummaryFragment = {
  __typename?: "Post";
  title: string;
  body: string;
  user: { __typename?: "User"; username: string; thumbnailUrl?: string | null };
} & { " $fragmentName": "PostSummaryFragment" };

export type GetPostSummaryQueryVariables = Exact<{
  postId: Scalars["String"];
}>;

export type GetPostSummaryQuery = {
  __typename?: "Query";
  postById: { __typename?: "Post"; id: string } & {
    " $fragmentRefs": { PostSummaryFragment: PostSummaryFragment };
  };
};

export type PostWithAuthorFragment = {
  __typename?: "Post";
  title: string;
  author: { __typename?: "User"; username: string };
} & { " $fragmentName": "PostWithAuthorFragment" };

export type GetPostWithAuthorQueryVariables = Exact<{
  postId: Scalars["String"];
}>;

export type GetPostWithAuthorQuery = {
  __typename?: "Query";
  postById: { __typename?: "Post"; id: string } & {
    " $fragmentRefs": { PostWithAuthorFragment: PostWithAuthorFragment };
  };
};

export type PostUserAvatarFragment = {
  __typename?: "Post";
  author: { __typename?: "User"; avatarUrl?: string | null };
} & { " $fragmentName": "PostUserAvatarFragment" };

export type PostDetailHeaderFragment = ({
  __typename?: "Post";
  title: string;
} & {
  " $fragmentRefs": { PostUserAvatarFragment: PostUserAvatarFragment };
}) & { " $fragmentName": "PostDetailHeaderFragment" };

export type PostDetailFragment = ({
  __typename?: "Post";
  title: string;
  body: string;
  author: { __typename?: "User"; username: string };
} & {
  " $fragmentRefs": { PostUserAvatarFragment: PostUserAvatarFragment };
}) & { " $fragmentName": "PostDetailFragment" };

export type GetPostDetailQueryVariables = Exact<{
  postId: Scalars["String"];
}>;

export type GetPostDetailQuery = {
  __typename?: "Query";
  postById: { __typename?: "Post"; id: string } & {
    " $fragmentRefs": {
      PostDetailFragment: PostDetailFragment;
      PostDetailHeaderFragment: PostDetailHeaderFragment;
    };
  };
};

export type PostHeaderUserFragment = {
  __typename?: "User";
  username: string;
  avatarUrl?: string | null;
} & { " $fragmentName": "PostHeaderUserFragment" };

export type PostHeaderFragment = {
  __typename?: "Post";
  title: string;
  author: { __typename?: "User" } & {
    " $fragmentRefs": { PostHeaderUserFragment: PostHeaderUserFragment };
  };
} & { " $fragmentName": "PostHeaderFragment" };

export type GetPostHeaderQueryVariables = Exact<{
  postId: Scalars["String"];
}>;

export type GetPostHeaderQuery = {
  __typename?: "Query";
  postById: {
    __typename?: "Post";
    id: string;
    author: { __typename?: "User"; id: string };
  } & { " $fragmentRefs": { PostHeaderFragment: PostHeaderFragment } };
};

export type PostWithCommentsFragment = {
  __typename?: "Post";
  title: string;
  body: string;
  comments: Array<{ __typename?: "Comment"; body: string }>;
} & { " $fragmentName": "PostWithCommentsFragment" };

export type GetPostWithCommentsQueryVariables = Exact<{
  postId: Scalars["String"];
}>;

export type GetPostWithCommentsQuery = {
  __typename?: "Query";
  postById: {
    __typename?: "Post";
    id: string;
    comments: Array<{ __typename?: "Comment"; id: string }>;
  } & {
    " $fragmentRefs": { PostWithCommentsFragment: PostWithCommentsFragment };
  };
};

export type PostListItemFragment = {
  __typename?: "Post";
  title: string;
  author: {
    __typename?: "User";
    id: string;
    avatarUrl?: string | null;
    username: string;
  };
} & { " $fragmentName": "PostListItemFragment" };

export type ListPostsQueryVariables = Exact<{
  userId: Scalars["String"];
}>;

export type ListPostsQuery = {
  __typename?: "Query";
  postsByUserId: Array<
    { __typename?: "Post"; id: string } & {
      " $fragmentRefs": { PostListItemFragment: PostListItemFragment };
    }
  >;
};

export type UserHeaderFragment = {
  __typename?: "User";
  username: string;
  avatarUrl?: string | null;
} & { " $fragmentName": "UserHeaderFragment" };

export type GetUserHeaderQueryVariables = Exact<{
  userId: Scalars["String"];
}>;

export type GetUserHeaderQuery = {
  __typename?: "Query";
  userById: { __typename?: "User"; id: string } & {
    " $fragmentRefs": { UserHeaderFragment: UserHeaderFragment };
  };
};

export type PostImageFragment = { __typename?: "Image"; imageUrl: string } & {
  " $fragmentName": "PostImageFragment";
};

export type PostVideoFragment = { __typename?: "Video"; videoUrl: string } & {
  " $fragmentName": "PostVideoFragment";
};

export type PostWithAttachmentsFragment = {
  __typename?: "Post";
  title: string;
  attachmentFiles: Array<
    | ({ __typename?: "Image" } & {
        " $fragmentRefs": { PostImageFragment: PostImageFragment };
      })
    | ({ __typename?: "Video" } & {
        " $fragmentRefs": { PostVideoFragment: PostVideoFragment };
      })
  >;
} & { " $fragmentName": "PostWithAttachmentsFragment" };

export type GetPostWithAttachmentsQueryVariables = Exact<{
  postId: Scalars["String"];
}>;

export type GetPostWithAttachmentsQuery = {
  __typename?: "Query";
  postById: { __typename?: "Post" } & {
    " $fragmentRefs": {
      PostWithAttachmentsFragment: PostWithAttachmentsFragment;
    };
  };
};

export const PostSummaryFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostSummary" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "body" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "user" },
            name: { kind: "Name", value: "author" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "username" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "thumbnailUrl" },
                  name: { kind: "Name", value: "avatarUrl" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostSummaryFragment, unknown>;
export const PostWithAuthorFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostWithAuthor" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "author" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "InlineFragment",
                  typeCondition: {
                    kind: "NamedType",
                    name: { kind: "Name", value: "User" },
                  },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "username" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostWithAuthorFragment, unknown>;
export const PostUserAvatarFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostUserAvatar" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "author" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "avatarUrl" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostUserAvatarFragment, unknown>;
export const PostDetailHeaderFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostDetailHeader" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "PostUserAvatar" },
          },
        ],
      },
    },
    ...PostUserAvatarFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<PostDetailHeaderFragment, unknown>;
export const PostDetailFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostDetail" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "body" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "author" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "username" } },
              ],
            },
          },
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "PostUserAvatar" },
          },
        ],
      },
    },
    ...PostUserAvatarFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<PostDetailFragment, unknown>;
export const PostHeaderUserFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostHeaderUser" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "User" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "username" } },
          { kind: "Field", name: { kind: "Name", value: "avatarUrl" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostHeaderUserFragment, unknown>;
export const PostHeaderFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostHeader" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "author" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostHeaderUser" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostHeaderUserFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<PostHeaderFragment, unknown>;
export const PostWithCommentsFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostWithComments" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "body" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "comments" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "body" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostWithCommentsFragment, unknown>;
export const PostListItemFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "author" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                { kind: "Field", name: { kind: "Name", value: "avatarUrl" } },
                { kind: "Field", name: { kind: "Name", value: "username" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostListItemFragment, unknown>;
export const UserHeaderFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "UserHeader" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "User" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "username" } },
          { kind: "Field", name: { kind: "Name", value: "avatarUrl" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<UserHeaderFragment, unknown>;
export const PostImageFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostImage" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Image" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "imageUrl" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostImageFragment, unknown>;
export const PostVideoFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostVideo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Video" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "videoUrl" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PostVideoFragment, unknown>;
export const PostWithAttachmentsFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PostWithAttachments" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Post" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "attachmentFiles" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostImage" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostVideo" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostImageFragmentDoc.definitions,
    ...PostVideoFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<PostWithAttachmentsFragment, unknown>;
export const GetPostSummaryDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetPostSummary" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "postId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "postById" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "postId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "postId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostSummary" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostSummaryFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<GetPostSummaryQuery, GetPostSummaryQueryVariables>;
export const GetPostWithAuthorDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetPostWithAuthor" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "postId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "postById" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "postId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "postId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostWithAuthor" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostWithAuthorFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<
  GetPostWithAuthorQuery,
  GetPostWithAuthorQueryVariables
>;
export const GetPostDetailDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetPostDetail" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "postId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "postById" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "postId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "postId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostDetail" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostDetailHeader" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostDetailFragmentDoc.definitions,
    ...PostDetailHeaderFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<GetPostDetailQuery, GetPostDetailQueryVariables>;
export const GetPostHeaderDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetPostHeader" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "postId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "postById" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "postId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "postId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "author" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                    ],
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostHeader" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostHeaderFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<GetPostHeaderQuery, GetPostHeaderQueryVariables>;
export const GetPostWithCommentsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetPostWithComments" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "postId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "postById" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "postId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "postId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "comments" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "id" } },
                    ],
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostWithComments" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostWithCommentsFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<
  GetPostWithCommentsQuery,
  GetPostWithCommentsQueryVariables
>;
export const ListPostsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ListPosts" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "userId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "postsByUserId" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "userId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "userId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostListItem" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostListItemFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<ListPostsQuery, ListPostsQueryVariables>;
export const GetUserHeaderDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetUserHeader" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "userId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "userById" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "userId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "userId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "id" } },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "UserHeader" },
                },
              ],
            },
          },
        ],
      },
    },
    ...UserHeaderFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<GetUserHeaderQuery, GetUserHeaderQueryVariables>;
export const GetPostWithAttachmentsDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetPostWithAttachments" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "postId" },
          },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "postById" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "postId" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "postId" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PostWithAttachments" },
                },
              ],
            },
          },
        ],
      },
    },
    ...PostWithAttachmentsFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<
  GetPostWithAttachmentsQuery,
  GetPostWithAttachmentsQueryVariables
>;
