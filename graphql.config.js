// @ts-check

const addHeader = {
  add: {
    content: "// Code generated by graphql-codegen. DO NOTT EDIT.\n",
  },
};

/** @type {import("graphql-config").GraphQLProjectConfig} */
module.exports = {
  schema: "./schema.graphql",
  documents: ["./src/**/*.graphql"],
  extensions: {
    /** @type {import("@graphql-codegen/plugin-helpers").Types.Config} */
    codegen: {
      generates: {
        "src/__generated__/graphqlTypes.ts": {
          plugins: [addHeader, "typescript"],
          /** @type {import("@graphql-codegen/typescript").TypeScriptPluginConfig} */
          config: {},
        },
        "src/__generated__/000-basic/": {
          preset: "near-operation-file",
          /** @type {import("@graphql-codegen/near-operation-file-preset").NearOperationFileConfig} */
          presetConfig: {
            baseTypesPath: "../graphqlTypes",
            folder: "__generated__/000-basic/",
            extension: ".ts",
          },
          plugins: [addHeader, "typescript-operations"],
          /** @type {import("@graphql-codegen/typescript-operations").TypeScriptDocumentsPluginConfig} */
          config: {},
        },
        "src/__generated__/000-basic-with-typed-document-node/": {
          preset: "near-operation-file",
          /** @type {import("@graphql-codegen/near-operation-file-preset").NearOperationFileConfig} */
          presetConfig: {
            baseTypesPath: "../graphqlTypes",
            folder: "__generated__/000-basic-with-typed-document-node/",
            extension: ".ts",
          },
          plugins: [addHeader, "typescript-operations", "typed-document-node"],
          /** @type {import("@graphql-codegen/typescript-operations").TypeScriptDocumentsPluginConfig & import("@graphql-codegen/typed-document-node").TypeScriptTypedDocumentNodesConfig} */
          config: {},
        },
        "src/__generated__/001-inlineFragmentTypes-combine": {
          preset: "near-operation-file",
          /** @type {import("@graphql-codegen/near-operation-file-preset").NearOperationFileConfig} */
          presetConfig: {
            baseTypesPath: "../graphqlTypes",
            folder: "__generated__/001-inlineFragmentTypes-combine/",
            extension: ".ts",
          },
          plugins: [addHeader, "typescript-operations"],
          /** @type {import("@graphql-codegen/typescript-operations").TypeScriptDocumentsPluginConfig} */
          config: {
            inlineFragmentTypes: "combine",
          },
        },
        "src/__generated__/002-inlineFragmentTypes-mask": {
          preset: "near-operation-file",
          /** @type {import("@graphql-codegen/near-operation-file-preset").NearOperationFileConfig} */
          presetConfig: {
            baseTypesPath: "../graphqlTypes",
            folder: "__generated__/002-inlineFragmentTypes-mask/",
            extension: ".ts",
          },
          plugins: [addHeader, "typescript-operations"],
          /** @type {import("@graphql-codegen/typescript-operations").TypeScriptDocumentsPluginConfig} */
          config: {
            inlineFragmentTypes: "mask",
          },
        },
        "src/__generated__/003-typed-document-node-dedupe/": {
          preset: "near-operation-file",
          /** @type {import("@graphql-codegen/near-operation-file-preset").NearOperationFileConfig} */
          presetConfig: {
            baseTypesPath: "../graphqlTypes",
            folder: "__generated__/003-typed-document-node-dedupe/",
            extension: ".ts",
          },
          plugins: [addHeader, "typescript-operations", "typed-document-node"],
          /** @type {import("@graphql-codegen/typescript-operations").TypeScriptDocumentsPluginConfig & import("@graphql-codegen/typed-document-node").TypeScriptTypedDocumentNodesConfig} */
          config: {
            dedupeFragments: true,
          },
        },
      },
      hooks: {
        afterAllFileWrite: ["yarn prettier --write"],
      },
    },
  },
};
